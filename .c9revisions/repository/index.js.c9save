{"ts":1365036665134,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1365036962852,"patch":[[{"diffs":[[1,"var Db = require('mongodb').Db\n , Server = require('mongodb').Server\n , Connection = require('mongodb').Connection\n , ObjectID = require('mongodb').ObjectID\n , nconf = require('nconf');\n\nvar server = new Server(common.mongoDBServer, common.mongoDBPort, { auto_reconnect: true });\nvar db = new Db(common.mongoDBDatabase,server, {safe:false});\n\ndb.open(function(err) {\n  if(common.mongoDBUsername != \"\")\n  {\n   db.authenticate(\n       common.mongoDBUsername, \n       common.mongoDBPassword, \n       function(err) {\n           if (err) {\n               console.log(err);\n           }else{\n               console.log('connected to mongoDB (' + common.mongoDBServer + ', ' + common.mongoDBDatabase + ')');\n           }\n       }\n   );\n }\n});\n\nexports.ProfileFindByID = function(id, callback) {\n\tdb.collection('profiles', function(err, collection) {\n        collection.find({_id: new ObjectID(id)},{limit: 1}).toArray(function(err, docs){ \n            if(err) return callback(err, null);\n            if (docs.length > 0) {\n                callback(null, docs[0]);\n            } else {\n                callback(null, {});\n            }\n        });\n    });\n};\n\nexports.ProfileAdd = function(item, callback) {\n    db.collection('profiles', function(err, collection) {\n        collection.insert(item, {safe:true}, function(err, result) {\n            if(err) return callback(err, null);\n\t\t\tcallback(null, result);\n        });\n    });\n};"]],"start1":0,"start2":0,"length1":0,"length2":1424}]],"length":1424,"saved":false}
{"ts":1365037262289,"patch":[[{"diffs":[[1,"/* \nUse MONGODB as the repository for all data\nThis module is only concerned with CRUD operations and not with any validations\n*/\n\n"],[0,"var Db = req"]],"start1":0,"start2":0,"length1":12,"length2":143},{"diffs":[[0,"ver("],[1,"n"],[0,"co"],[-1,"mmon.mongoDBServer"],[1,"nf.get('MONGO_DB_SERVER')"],[0,", "],[1,"n"],[0,"co"],[-1,"mmon.mongoDBPort"],[1,"nf.get('MONGO_DB_PORT')"],[0,", { "]],"start1":338,"start2":338,"length1":48,"length2":64},{"diffs":[[0," new Db("],[1,"n"],[0,"co"],[-1,"mmon.mongoDBDatabase"],[1,"nf.get('MONGO_DB_DATABASE')"],[0,",server,"]],"start1":435,"start2":435,"length1":38,"length2":46},{"diffs":[[0,") {\n"],[1,"  "],[0,"  if("],[1,"n"],[0,"co"],[-1,"mmon.mongoDBUsername"],[1,"nf.get('MONGO_DB_USERNAME')"],[0," !="],[1,"="],[0," \"\")\n"],[1,"  "],[0,"  {\n"],[1,"     "],[0,"   d"]],"start1":518,"start2":518,"length1":47,"length2":65},{"diffs":[[0,"    "],[1,"     "],[1,"n"],[0,"co"],[-1,"mmon.mongoDBUsername, \n       common.mongoDBPassword, \n"],[1,"nf.get('MONGO_DB_USERNAME'), \n            nconf.get('MONGO_DB_PASSWORD'), \n     "],[0,"    "]],"start1":602,"start2":602,"length1":65,"length2":96},{"diffs":[[0,"\n           "],[1,"  "],[1,"   "],[0,"if (err) {\n "]],"start1":716,"start2":716,"length1":24,"length2":29},{"diffs":[[0,"     if (err) {\n"],[1,"     "],[0,"               c"]],"start1":728,"start2":728,"length1":32,"length2":37},{"diffs":[[0,"    "],[1,"   "],[1,"  "],[0,"}else{\n"],[1,"     "],[0,"    "]],"start1":789,"start2":789,"length1":15,"length2":25},{"diffs":[[0,"' + "],[1,"n"],[0,"co"],[-1,"mmon.mongoDBServer"],[1,"nf.get('MONGO_DB_SERVER')"],[0," + '"]],"start1":860,"start2":860,"length1":28,"length2":36},{"diffs":[[0,"' + "],[1,"n"],[0,"co"],[-1,"mmon.mongoDBDatabase"],[1,"nf.get('MONGO_DB_DATABASE')"],[0," + '"]],"start1":898,"start2":898,"length1":30,"length2":38},{"diffs":[[0,"    "],[-1,"}\n"],[1,"     }\n   "],[0,"       "],[1,"  "],[0,"}\n   "],[-1,");\n"],[1,"     );\n   "],[0," }\n}"]],"start1":948,"start2":948,"length1":25,"length2":43}]],"length":1682,"saved":false}
{"ts":1365037277406,"patch":[[{"diffs":[[0,"/* \n"],[1,"    "],[0,"Use MONG"]],"start1":0,"start2":0,"length1":12,"length2":16},{"diffs":[[0,"ll data\n"],[1,"    "],[0,"This mod"]],"start1":43,"start2":43,"length1":16,"length2":20}]],"length":1690,"saved":false}
{"ts":1365037367335,"patch":[[{"diffs":[[0,"});\n};\n\n"],[1,"exports.ProfileFindAll = function(callback) {\n    db.collection('profiles', function(err, collection) {\n        //collection.find({}).sort([['created', 'desc']]).toArray(function(err, docs) {\n        collection.find({}).toArray(function(err, items) {\n            if(err) return callback(err, null);\n            callback(null, items);\n        });\n    });\n};\n\n"],[0,"exports."]],"start1":1410,"start2":1410,"length1":16,"length2":374}]],"length":2048,"saved":false}
{"ts":1365037483697,"patch":[[{"diffs":[[0,"ult);\n        });\n    });\n};"],[1,"\n\nexports.ProfileUpdate = function(blog, callback) {\n    db.collection('profiles', function(err, collection) {\n        collection.findAndModify({_id: new ObjectID(blog._id)}, {}, {$set: {comment: blog.comment}}, {} , function(err, item) {\n            if(err) return callback(err, null);\n            callback(null, item);\n        });\n    });\n};\n\nexports.ProfileDelete = function(id, callback) {\n    db.collection('profiles', function(err, collection) {\n        collection.findAndModify({_id: new ObjectID(id)}, {}, {}, { remove: true } , function(err, item) {\n            if(err) return callback(err, null);\n            console.log(item);\n            callback(null, item);\n        });\n    });\n};"]],"start1":2020,"start2":2020,"length1":28,"length2":722}]],"length":2742,"saved":false}
{"ts":1365037508750,"patch":[[{"diffs":[[0,"ver\n"],[-1," , Connection = require('mongodb').Connection\n"],[0," , O"]],"start1":204,"start2":204,"length1":54,"length2":8}]],"length":2696,"saved":false}
{"contributors":[],"silentsave":false,"ts":1365163325364,"patch":[[{"diffs":[[0," }\n});\n\n"],[1,"exports.VentsFindAll = function(callback) {\n    db.collection('profiles', function(err, collection) {\n        collection.find({}).sort([['created', 'desc']]).toArray(function(err, items) {\n            if(err) return callback(err, null);\n            callback(null, items);\n        });\n    });\n};\n\nexports.VentsAdd = function(item, callback) {\n    db.collection('profiles', function(err, collection) {\n        collection.insert(item, {safe:true}, function(err, result) {\n            if(err) return callback(err, null);\n    \t\tcallback(null, result);\n        });\n    });\n};\n\n"],[0,"exports."]],"start1":949,"start2":949,"length1":16,"length2":587}]],"length":3267,"saved":false}
{"ts":1365163334683,"patch":[[{"diffs":[[0," db.collection('"],[-1,"profile"],[1,"vent"],[0,"s', function(err"]],"start1":1004,"start2":1004,"length1":39,"length2":36},{"diffs":[[0," db.collection('"],[-1,"profile"],[1,"vent"],[0,"s', function(err"]],"start1":1299,"start2":1299,"length1":39,"length2":36}]],"length":3261,"saved":false}
{"ts":1365163397410,"patch":[[{"diffs":[[0,"l);\n    "],[-1,"\t\t"],[1,"        "],[0,"callback"]],"start1":1464,"start2":1464,"length1":18,"length2":24}]],"length":3267,"saved":false}
{"contributors":[],"silentsave":false,"ts":1365242228971,"patch":[[{"diffs":[[0,"SERVER')"],[1,".toString()"],[0,", nconf."]],"start1":324,"start2":324,"length1":16,"length2":27},{"diffs":[[0,"B_PORT')"],[1,".toString()"],[0,", { auto"]],"start1":363,"start2":363,"length1":16,"length2":27},{"diffs":[[0,"TABASE')"],[1,".toString()"],[0,",server,"]],"start1":449,"start2":449,"length1":16,"length2":27}]],"length":3300,"saved":false}
{"ts":1365242251722,"patch":[[{"diffs":[[0,"ERNAME')"],[1,".toString()"],[0," !== \"\")"]],"start1":546,"start2":546,"length1":16,"length2":27},{"diffs":[[0,"!== \"\")\n"],[-1,""],[0,"    {\n  "]],"start1":566,"start2":566,"length1":16,"length2":16},{"diffs":[[0,"ERNAME')"],[1,".toString()"],[0,", \n     "]],"start1":639,"start2":639,"length1":16,"length2":27},{"diffs":[[0,"SSWORD')"],[1,".toString()"],[0,", \n     "]],"start1":695,"start2":695,"length1":16,"length2":27},{"diffs":[[0,"SERVER')"],[1,".toString()"],[0," + ', ' "]],"start1":912,"start2":912,"length1":16,"length2":27},{"diffs":[[0,"TABASE')"],[1,".toString()"],[0," + ')');"]],"start1":963,"start2":963,"length1":16,"length2":27}]],"length":3355,"saved":false}
{"ts":1365242311929,"patch":[[{"diffs":[[0,"nconf');"],[1,"\n \n console.log(nconf.get('MONGO_DB_SERVER'));"],[0,"\n\nvar se"]],"start1":270,"start2":270,"length1":16,"length2":62}]],"length":3401,"saved":false}
